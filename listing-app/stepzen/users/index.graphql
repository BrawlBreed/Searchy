type User {
  _id: String
  avatar: String
  description: String
  callingCode: Int
  createdAt: Date
  email: String
  followers: [String]
  following: [String]
  isActive: Boolean
  likes: [String]
  name: String
  notificationToken: String
  phone: Int
  showPhone: Boolean
}

type UserList { 
  name: ID,
  value: User
}

type Query {
  getUserById(user: ID): User
    @rest(
      endpoint: "https://delivery-firm-default-rtdb.firebaseio.com/users/$user.json"
    )
  getUsers: [UserList]
    @rest(
      endpoint: "https://delivery-firm-default-rtdb.firebaseio.com/users.json",
      transforms: [{ pathpattern: [], editor: "objectToArray"}]
    )
}

input NotificationsInput {
  recommendations: Boolean,
  specialOffers: Boolean,
}

type Mutation {
  register(
    avatar: String
    description: String
    callingCode: Int
    createdAt: Date
    email: String
    followers: [String]
    following: [String]
    isActive: Boolean
    likes: [String]
    name: String
    notifications: NotificationsInput
    phone: Int
    showPhone: Boolean
  ): JSON
    @rest(
      endpoint: "https://delivery-firm-default-rtdb.firebaseio.com/users.json",
      method: POST,
    )
}
# type Mutation {
#   Login(
#     callingCode: Int
#     createdAt: Date
#     email: String
#     followers: [String]
#     following: [String]
#     isActive: Boolean
#     likes: [String]
#     name: String
#     notificationToken: String
#     phone: Int
#     showPhone: Boolean
#   ): User
#     @rest(
#       endpoint: "https://delivery-firm-default-rtdb.firebaseio.com/users.json",
#       method: "POST",
#       bodySerializer: "json"
#     )
# }